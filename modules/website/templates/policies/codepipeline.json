{
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect":"Allow",
        "Action": [
            "s3:CreateBucket",
            "s3:ListObjects",
            "s3:GetObjectAcl",
            "s3:GetObjectVersionAcl",
            "s3:DeleteObject",
            "s3:HeadBucket",
            "s3:GetBucketNotification",
            "s3:PutObject",
            "s3:GetObject",
            "s3:GetBucketTagging",
            "s3:ListBucketVersions",
            "s3:ListBucket",
            "s3:GetBucketPolicy",
            "s3:DeleteBucket",
            "s3:PutBucketVersioning",
            "s3:GetBucketAcl",
            "s3:ListAllMyBuckets",
            "s3:GetBucketLocation",
            "s3:GetObjectVersion"
        ],
        "Resource": [
          "*"
        ]
      },
      {
        "Effect": "Allow",
        "Action": [
          "codebuild:BatchGetBuilds",
          "codebuild:StartBuild"
        ],
        "Resource": "*"
      },
      {
        "Action": [
          "ecs:*",
          "events:DescribeRule",
          "events:DeleteRule",
          "events:ListRuleNamesByTarget",
          "events:ListTargetsByRule",
          "events:PutRule",
          "events:PutTargets",
          "events:RemoveTargets",
          "iam:ListAttachedRolePolicies",
          "iam:ListInstanceProfiles",
          "iam:ListRoles",
          "logs:CreateLogGroup",
          "logs:DescribeLogGroups",
          "logs:FilterLogEvents"
        ],
        "Resource": "*",
        "Effect": "Allow"
      },
      {
        "Action": "iam:PassRole",
        "Effect": "Allow",
        "Resource": [
          "*"
        ],
        "Condition": {
          "StringLike": {
            "iam:PassedToService": "ecs-tasks.amazonaws.com"
          }
        }
      },
      {
        "Action": "iam:PassRole",
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/ecsInstanceRole*"
        ],
        "Condition": {
          "StringLike": {
            "iam:PassedToService": [
              "ec2.amazonaws.com",
              "ec2.amazonaws.com.cn"
            ]
          }
        }
      },
      {
        "Action": "iam:PassRole",
        "Effect": "Allow",
        "Resource": [
          "arn:aws:iam::*:role/ecsAutoscaleRole*"
        ],
        "Condition": {
          "StringLike": {
            "iam:PassedToService": [
              "application-autoscaling.amazonaws.com",
              "application-autoscaling.amazonaws.com.cn"
            ]
          }
        }
      },
      {
        "Effect": "Allow",
        "Action": "iam:CreateServiceLinkedRole",
        "Resource": "*",
        "Condition": {
          "StringLike": {
            "iam:AWSServiceName": [
              "ecs.amazonaws.com",
              "spot.amazonaws.com",
              "spotfleet.amazonaws.com"
            ]
          }
        }
      },
      
                   {
                      "Action"  : [
                           "s3:PutObject"
                        ],
                      "Effect"  : "Allow",
                      "Resource": [
                           "arn:aws:s3:::codepipeline*",
                           "arn:aws:s3:::elasticbeanstalk*"
                        ]
                    },
                   {
                      "Action"  : [
                           "codecommit:CancelUploadArchive",
                           "codecommit:GetBranch",
                           "codecommit:GetCommit",
                           "codecommit:GetUploadArchiveStatus",
                           "codecommit:UploadArchive"
                       ],
                      "Effect"  : "Allow",
                      "Resource": "*"
                    },
                   {
                      "Action"  : [
                           "codedeploy:CreateDeployment",
                           "codedeploy:GetApplicationRevision",
                           "codedeploy:GetDeployment",
                           "codedeploy:GetDeploymentConfig",
                           "codedeploy:RegisterApplicationRevision"
                        ],
                      "Effect"  : "Allow",
                      "Resource": "*"
                    },
                   {
                      "Action"  : [
                           "elasticbeanstalk:*",
                           "ec2:*",
                           "elasticloadbalancing:*",
                           "autoscaling:*",
                           "cloudwatch:*",
                           "s3:*",
                           "sns:*",
                           "cloudformation:*",
                           "rds:*",
                           "sqs:*",
                           "ecs:*",
                           "iam:PassRole"
                        ],
                      "Effect"  : "Allow",
                      "Resource": "*"
                    },
                   {
                      "Action"  : [
                           "lambda:InvokeFunction",
                           "lambda:ListFunctions"
                        ],
                      "Effect"  : "Allow",
                      "Resource": "*"
                    },
                   {
                      "Action"  : [
                           "opsworks:CreateDeployment",
                           "opsworks:DescribeApps",
                           "opsworks:DescribeCommands",
                           "opsworks:DescribeDeployments",
                           "opsworks:DescribeInstances",
                           "opsworks:DescribeStacks",
                           "opsworks:UpdateApp",
                           "opsworks:UpdateStack"
                        ],
                      "Effect"  : "Allow",
                      "Resource": "*"
                    },
                   {
                      "Action"  : [
                           "cloudformation:CreateStack",
                           "cloudformation:DeleteStack",
                           "cloudformation:DescribeStacks",
                           "cloudformation:UpdateStack",
                           "cloudformation:CreateChangeSet",
                           "cloudformation:DeleteChangeSet",
                           "cloudformation:DescribeChangeSet",
                           "cloudformation:ExecuteChangeSet",
                           "cloudformation:SetStackPolicy",
                           "cloudformation:ValidateTemplate",
                           "iam:PassRole"
                        ],
                      "Effect"  : "Allow",
                      "Resource": "*"
                    },
                   {
                      "Action"  : [
                           "codebuild:BatchGetBuilds",
                           "codebuild:StartBuild"
                        ],
                      "Effect"  : "Allow",
                      "Resource": "*"
                    },
                   {
                      "Action"  : [
                           "kms:DescribeKey",
                           "kms:GenerateDataKey*",
                           "kms:Encrypt",
                               "kms:ReEncrypt*",
                           "kms:Decrypt"
                           
                        ],
                      "Effect"  : "Allow",
                      "Resource": "arn:aws:kms:ap-northeast-2:372082813534:key/e94dd09b-274a-49a0-a442-0de552f29f8c"
                    }
    ]
  }
